%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 163 252
%%Creator: yExport 1.5
%%Producer: org.freehep.graphicsio.ps.EPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Friday, February 2, 2018 8:38:43 AM CET
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
163 252 setpagesize
0 0 0 0 setmargins
0 0 setorigin
163 252 setsize
naturalsize
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
163.000 0.00000 l
163.000 252.000 l
0.00000 252.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
163.000 0.00000 l
163.000 252.000 l
0.00000 252.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 163 252 rc
q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 -312.000 -21.0000 ] concat
1.00000 1.00000 1.00000 RG
newpath
312.000 21.0000 m
475.000 21.0000 l
475.000 273.000 l
312.000 273.000 l
312.000 21.0000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -312.000 -21.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -312.000 -21.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -312.000 -21.0000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .800000 0.00000 RG
newpath
328.500 180.000 m
328.500 202.000 l
328.500 204.209 330.291 206.000 332.500 206.000  c
455.500 206.000 l
457.709 206.000 459.500 204.209 459.500 202.000  c
459.500 180.000 l
459.500 177.791 457.709 176.000 455.500 176.000  c
332.500 176.000 l
330.291 176.000 328.500 177.791 328.500 180.000  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
369.743 186.686 m
369.384 188.529 l
368.936 188.311 368.498 188.149 368.071 188.045  c
367.644 187.941 367.222 187.889 366.806 187.889  c
366.243 187.889 365.806 187.975 365.493 188.146  c
365.181 188.318 365.024 188.561 365.024 188.873  c
365.024 189.071 365.095 189.227 365.235 189.342  c
365.376 189.456 365.660 189.566 366.087 189.670  c
367.009 189.904 l
367.790 190.092 368.360 190.370 368.720 190.740  c
369.079 191.110 369.259 191.587 369.259 192.170  c
369.259 193.128 368.899 193.894 368.181 194.467  c
367.462 195.040 366.493 195.326 365.274 195.326  c
364.712 195.326 364.149 195.274 363.587 195.170  c
363.024 195.066 362.478 194.910 361.946 194.701  c
362.306 192.795 l
362.816 193.097 363.319 193.321 363.813 193.467  c
364.308 193.613 364.790 193.686 365.259 193.686  c
365.780 193.686 366.201 193.581 366.524 193.373  c
366.847 193.165 367.009 192.894 367.009 192.561  c
367.009 192.352 366.936 192.188 366.790 192.068  c
366.644 191.949 366.326 191.826 365.837 191.701  c
364.915 191.467 l
364.238 191.300 363.733 191.035 363.399 190.670  c
363.066 190.305 362.899 189.837 362.899 189.264  c
362.899 188.347 363.248 187.615 363.946 187.068  c
364.644 186.521 365.582 186.248 366.759 186.248  c
367.238 186.248 367.725 186.285 368.220 186.357  c
368.715 186.430 369.222 186.540 369.743 186.686  c
h
373.073 194.201 m
372.401 197.654 l
370.276 197.654 l
372.042 188.592 l
374.151 188.592 l
373.964 189.545 l
374.287 189.170 374.623 188.891 374.972 188.709  c
375.321 188.527 375.703 188.436 376.120 188.436  c
376.860 188.436 377.446 188.670 377.878 189.139  c
378.310 189.607 378.526 190.243 378.526 191.045  c
378.526 191.555 378.451 192.048 378.300 192.521  c
378.149 192.995 377.933 193.430 377.651 193.826  c
377.297 194.316 376.896 194.688 376.448 194.943  c
376.000 195.199 375.521 195.326 375.011 195.326  c
374.563 195.326 374.180 195.235 373.862 195.053  c
373.545 194.870 373.282 194.587 373.073 194.201  c
h
375.276 189.951 m
374.735 189.951 374.292 190.201 373.948 190.701  c
373.604 191.201 373.433 191.847 373.433 192.639  c
373.433 193.003 373.529 193.287 373.722 193.490  c
373.914 193.693 374.183 193.795 374.526 193.795  c
375.058 193.795 375.495 193.550 375.839 193.061  c
376.183 192.571 376.354 191.946 376.354 191.186  c
376.354 190.779 376.261 190.472 376.073 190.264  c
375.886 190.055 375.620 189.951 375.276 189.951  c
h
380.632 188.592 m
382.741 188.592 l
381.460 195.154 l
379.366 195.154 l
380.632 188.592 l
h
381.132 186.029 m
383.241 186.029 l
382.913 187.748 l
380.788 187.748 l
381.132 186.029 l
h
390.839 191.154 m
390.073 195.154 l
387.964 195.154 l
388.620 191.732 l
388.672 191.514 388.711 191.326 388.737 191.170  c
388.763 191.014 388.776 190.889 388.776 190.795  c
388.776 190.545 388.706 190.352 388.565 190.217  c
388.425 190.081 388.229 190.014 387.979 190.014  c
387.542 190.014 387.167 190.183 386.854 190.521  c
386.542 190.860 386.328 191.326 386.214 191.920  c
385.573 195.154 l
383.479 195.154 l
384.745 188.592 l
386.854 188.592 l
386.667 189.545 l
387.052 189.170 387.440 188.891 387.831 188.709  c
388.222 188.527 388.631 188.436 389.058 188.436  c
389.662 188.436 390.128 188.594 390.456 188.912  c
390.784 189.230 390.948 189.675 390.948 190.248  c
390.948 190.373 390.940 190.511 390.925 190.662  c
390.909 190.813 390.881 190.977 390.839 191.154  c
h
393.788 186.029 m
395.897 186.029 l
394.116 195.154 l
392.022 195.154 l
393.788 186.029 l
h
400.261 189.936 m
399.719 189.936 399.271 190.180 398.917 190.670  c
398.563 191.160 398.386 191.785 398.386 192.545  c
398.386 192.962 398.482 193.279 398.675 193.498  c
398.868 193.717 399.146 193.826 399.511 193.826  c
400.052 193.826 400.498 193.579 400.847 193.084  c
401.196 192.589 401.370 191.956 401.370 191.186  c
401.370 190.779 401.276 190.469 401.089 190.256  c
400.901 190.042 400.625 189.936 400.261 189.936  c
h
400.433 188.436 m
401.412 188.436 402.180 188.683 402.737 189.178  c
403.295 189.673 403.573 190.347 403.573 191.201  c
403.573 191.701 403.485 192.183 403.308 192.646  c
403.131 193.110 402.875 193.540 402.542 193.936  c
402.146 194.394 401.675 194.740 401.128 194.975  c
400.581 195.209 399.974 195.326 399.308 195.326  c
398.349 195.326 397.591 195.079 397.034 194.584  c
396.477 194.089 396.198 193.410 396.198 192.545  c
396.198 192.055 396.287 191.576 396.464 191.107  c
396.641 190.639 396.901 190.206 397.245 189.811  c
397.631 189.363 398.094 189.021 398.636 188.787  c
399.177 188.553 399.776 188.436 400.433 188.436  c
h
410.974 188.795 m
410.646 190.514 l
410.364 190.326 410.086 190.183 409.810 190.084  c
409.534 189.985 409.265 189.936 409.005 189.936  c
408.328 189.936 407.771 190.165 407.333 190.623  c
406.896 191.081 406.677 191.670 406.677 192.389  c
406.677 192.837 406.812 193.188 407.083 193.443  c
407.354 193.699 407.734 193.826 408.224 193.826  c
408.557 193.826 408.882 193.777 409.200 193.678  c
409.518 193.579 409.817 193.436 410.099 193.248  c
409.771 194.967 l
409.427 195.081 409.080 195.170 408.731 195.232  c
408.382 195.295 408.026 195.326 407.661 195.326  c
406.630 195.326 405.838 195.094 405.286 194.631  c
404.734 194.167 404.458 193.508 404.458 192.654  c
404.458 192.123 404.560 191.605 404.763 191.100  c
404.966 190.594 405.260 190.139 405.646 189.732  c
406.073 189.295 406.560 188.969 407.106 188.756  c
407.653 188.542 408.286 188.436 409.005 188.436  c
409.338 188.436 409.669 188.464 409.997 188.521  c
410.325 188.579 410.651 188.670 410.974 188.795  c
h
413.259 186.029 m
415.368 186.029 l
414.399 190.982 l
417.243 188.592 l
419.712 188.592 l
415.899 191.623 l
418.665 195.154 l
416.274 195.154 l
414.149 192.326 l
413.587 195.154 l
411.493 195.154 l
413.259 186.029 l
h
425.817 188.795 m
425.505 190.420 l
425.099 190.232 424.692 190.087 424.286 189.982  c
423.880 189.878 423.494 189.826 423.130 189.826  c
422.713 189.826 422.393 189.881 422.169 189.990  c
421.945 190.100 421.833 190.253 421.833 190.451  c
421.833 190.566 421.896 190.660 422.021 190.732  c
422.146 190.805 422.390 190.878 422.755 190.951  c
423.146 191.029 l
423.989 191.206 424.580 191.436 424.919 191.717  c
425.257 191.998 425.427 192.394 425.427 192.904  c
425.427 193.665 425.130 194.258 424.536 194.686  c
423.942 195.113 423.109 195.326 422.036 195.326  c
421.578 195.326 421.114 195.290 420.646 195.217  c
420.177 195.144 419.703 195.040 419.224 194.904  c
419.536 193.248 l
419.911 193.477 420.315 193.649 420.747 193.764  c
421.179 193.878 421.625 193.936 422.083 193.936  c
422.521 193.936 422.851 193.881 423.075 193.771  c
423.299 193.662 423.411 193.508 423.411 193.311  c
423.411 193.165 423.349 193.053 423.224 192.975  c
423.099 192.896 422.838 192.816 422.442 192.732  c
422.067 192.670 l
421.317 192.514 420.781 192.282 420.458 191.975  c
420.135 191.667 419.974 191.248 419.974 190.717  c
419.974 189.988 420.250 189.425 420.802 189.029  c
421.354 188.633 422.146 188.436 423.177 188.436  c
423.625 188.436 424.067 188.464 424.505 188.521  c
424.942 188.579 425.380 188.670 425.817 188.795  c
h
f
2 J
10.0000 M
1.00000 .800000 0.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
328.500 180.000 m
328.500 202.000 l
328.500 204.209 330.291 206.000 332.500 206.000  c
455.500 206.000 l
457.709 206.000 459.500 204.209 459.500 202.000  c
459.500 180.000 l
459.500 177.791 457.709 176.000 455.500 176.000  c
332.500 176.000 l
330.291 176.000 328.500 177.791 328.500 180.000  c
h
S
2 J
10.0000 M
1.00000 0.00000 0.00000 RG
newpath
328.500 206.000 m
459.500 206.000 l
459.500 258.000 l
328.500 258.000 l
328.500 206.000 l
h
f
1.00000 1.00000 1.00000 RG
0 J
1.45000 M
newpath
343.439 236.362 m
342.814 236.591 342.210 236.763 341.626 236.878  c
341.043 236.993 340.496 237.050 339.986 237.050  c
338.611 237.050 337.512 236.672 336.689 235.917  c
335.866 235.162 335.455 234.164 335.455 232.925  c
335.455 232.112 335.585 231.344 335.845 230.620  c
336.106 229.896 336.491 229.237 337.001 228.644  c
337.595 227.946 338.314 227.407 339.158 227.026  c
340.001 226.646 340.908 226.456 341.876 226.456  c
342.408 226.456 342.939 226.519 343.470 226.644  c
344.001 226.769 344.543 226.961 345.095 227.222  c
344.673 229.331 l
344.236 228.998 343.796 228.753 343.353 228.597  c
342.910 228.440 342.434 228.362 341.923 228.362  c
340.871 228.362 339.991 228.769 339.283 229.581  c
338.574 230.394 338.220 231.409 338.220 232.628  c
338.220 233.409 338.439 234.024 338.876 234.472  c
339.314 234.920 339.918 235.144 340.689 235.144  c
341.147 235.144 341.634 235.060 342.150 234.894  c
342.666 234.727 343.246 234.466 343.892 234.112  c
343.439 236.362 l
h
352.432 231.269 m
352.265 231.175 352.078 231.104 351.870 231.058  c
351.661 231.011 351.437 230.987 351.198 230.987  c
350.573 230.987 350.055 231.188 349.643 231.589  c
349.232 231.990 348.953 232.565 348.807 233.315  c
348.120 236.847 l
345.667 236.847 l
347.151 229.190 l
349.604 229.190 l
349.338 230.503 l
349.661 230.024 350.068 229.654 350.557 229.394  c
351.047 229.133 351.588 229.003 352.182 229.003  c
352.265 229.003 352.362 229.008 352.471 229.019  c
352.581 229.029 352.708 229.045 352.854 229.065  c
352.432 231.269 l
h
354.055 229.190 m
356.508 229.190 l
355.024 236.847 l
352.571 236.847 l
354.055 229.190 l
h
354.633 226.206 m
357.086 226.206 l
356.696 228.206 l
354.227 228.206 l
354.633 226.206 l
h
361.963 227.019 m
361.557 229.190 l
364.057 229.190 l
363.713 230.940 l
361.198 230.940 l
360.573 234.175 l
360.552 234.248 360.539 234.310 360.534 234.362  c
360.528 234.414 360.526 234.461 360.526 234.503  c
360.526 234.711 360.596 234.862 360.737 234.956  c
360.877 235.050 361.109 235.097 361.432 235.097  c
362.698 235.097 l
362.354 236.847 l
360.292 236.847 l
359.552 236.847 358.989 236.690 358.604 236.378  c
358.219 236.065 358.026 235.618 358.026 235.034  c
358.026 234.909 358.034 234.774 358.049 234.628  c
358.065 234.482 358.083 234.336 358.104 234.190  c
358.745 230.940 l
357.542 230.940 l
357.870 229.190 l
359.088 229.190 l
359.510 227.019 l
361.963 227.019 l
h
365.546 229.190 m
368.000 229.190 l
366.515 236.847 l
364.062 236.847 l
365.546 229.190 l
h
366.125 226.206 m
368.578 226.206 l
368.187 228.206 l
365.718 228.206 l
366.125 226.206 l
h
376.564 229.425 m
376.173 231.425 l
375.840 231.206 375.514 231.039 375.197 230.925  c
374.879 230.810 374.569 230.753 374.267 230.753  c
373.465 230.753 372.811 231.021 372.306 231.558  c
371.801 232.094 371.548 232.779 371.548 233.612  c
371.548 234.144 371.705 234.558 372.017 234.854  c
372.330 235.151 372.772 235.300 373.345 235.300  c
373.731 235.300 374.108 235.243 374.478 235.128  c
374.848 235.013 375.199 234.841 375.533 234.612  c
375.158 236.628 l
374.751 236.763 374.343 236.868 373.931 236.940  c
373.520 237.013 373.106 237.050 372.689 237.050  c
371.491 237.050 370.567 236.779 369.916 236.237  c
369.264 235.696 368.939 234.930 368.939 233.940  c
368.939 233.315 369.059 232.709 369.298 232.120  c
369.538 231.532 369.882 231.003 370.330 230.534  c
370.830 230.013 371.400 229.628 372.041 229.378  c
372.681 229.128 373.423 229.003 374.267 229.003  c
374.653 229.003 375.035 229.039 375.416 229.112  c
375.796 229.185 376.179 229.289 376.564 229.425  c
h
381.332 233.394 m
380.717 233.394 380.253 233.490 379.941 233.683  c
379.628 233.875 379.472 234.154 379.472 234.519  c
379.472 234.800 379.566 235.021 379.753 235.183  c
379.941 235.344 380.196 235.425 380.519 235.425  c
381.019 235.425 381.438 235.271 381.777 234.964  c
382.115 234.657 382.342 234.227 382.457 233.675  c
382.503 233.394 l
381.332 233.394 l
h
385.144 232.472 m
384.300 236.847 l
381.847 236.847 l
382.050 235.706 l
381.654 236.164 381.233 236.503 380.785 236.722  c
380.337 236.940 379.852 237.050 379.332 237.050  c
378.602 237.050 378.024 236.860 377.597 236.479  c
377.170 236.099 376.957 235.591 376.957 234.956  c
376.957 233.987 377.334 233.243 378.089 232.722  c
378.845 232.201 379.936 231.940 381.363 231.940  c
382.800 231.940 l
382.832 231.753 l
382.842 231.690 382.847 231.646 382.847 231.620  c
382.847 231.594 382.847 231.565 382.847 231.534  c
382.847 231.243 382.707 231.019 382.425 230.862  c
382.144 230.706 381.722 230.628 381.160 230.628  c
380.649 230.628 380.157 230.680 379.683 230.784  c
379.209 230.888 378.753 231.050 378.316 231.269  c
378.691 229.394 l
379.201 229.269 379.722 229.172 380.253 229.104  c
380.785 229.037 381.342 229.003 381.925 229.003  c
383.050 229.003 383.889 229.198 384.441 229.589  c
384.993 229.979 385.269 230.576 385.269 231.378  c
385.269 231.524 385.259 231.690 385.238 231.878  c
385.217 232.065 385.186 232.263 385.144 232.472  c
h
388.669 226.206 m
391.123 226.206 l
389.060 236.847 l
386.607 236.847 l
388.669 226.206 l
h
403.686 229.425 m
403.327 231.331 l
402.847 231.102 402.371 230.927 401.897 230.808  c
401.423 230.688 400.972 230.628 400.545 230.628  c
400.066 230.628 399.694 230.690 399.428 230.815  c
399.163 230.940 399.030 231.123 399.030 231.362  c
399.030 231.498 399.103 231.607 399.249 231.690  c
399.394 231.774 399.681 231.857 400.108 231.940  c
400.561 232.034 l
401.551 232.243 402.243 232.511 402.639 232.839  c
403.035 233.167 403.233 233.628 403.233 234.222  c
403.233 235.107 402.884 235.800 402.186 236.300  c
401.488 236.800 400.514 237.050 399.264 237.050  c
398.733 237.050 398.194 237.008 397.647 236.925  c
397.100 236.841 396.545 236.716 395.983 236.550  c
396.342 234.628 l
396.790 234.888 397.267 235.086 397.772 235.222  c
398.277 235.357 398.790 235.425 399.311 235.425  c
399.832 235.425 400.222 235.362 400.483 235.237  c
400.743 235.112 400.874 234.930 400.874 234.690  c
400.874 234.524 400.801 234.396 400.655 234.308  c
400.509 234.219 400.207 234.128 399.749 234.034  c
399.295 233.940 l
398.420 233.763 397.798 233.498 397.428 233.144  c
397.058 232.789 396.874 232.295 396.874 231.659  c
396.874 230.815 397.194 230.162 397.834 229.698  c
398.475 229.235 399.400 229.003 400.608 229.003  c
401.129 229.003 401.642 229.039 402.147 229.112  c
402.652 229.185 403.165 229.289 403.686 229.425  c
h
412.988 233.300 m
412.894 233.690 l
407.175 233.690 l
407.175 233.722 407.173 233.763 407.167 233.815  c
407.162 233.868 407.160 233.909 407.160 233.940  c
407.160 234.430 407.308 234.800 407.605 235.050  c
407.902 235.300 408.347 235.425 408.941 235.425  c
409.462 235.425 410.009 235.347 410.582 235.190  c
411.154 235.034 411.753 234.800 412.378 234.487  c
412.003 236.394 l
411.410 236.612 410.816 236.776 410.222 236.886  c
409.628 236.995 409.029 237.050 408.425 237.050  c
407.227 237.050 406.303 236.774 405.652 236.222  c
405.001 235.670 404.675 234.888 404.675 233.878  c
404.675 233.295 404.779 232.729 404.988 232.183  c
405.196 231.636 405.498 231.133 405.894 230.675  c
406.363 230.123 406.925 229.706 407.582 229.425  c
408.238 229.144 408.962 229.003 409.753 229.003  c
410.795 229.003 411.621 229.279 412.230 229.831  c
412.839 230.383 413.144 231.128 413.144 232.065  c
413.144 232.243 413.131 232.433 413.105 232.636  c
413.079 232.839 413.040 233.060 412.988 233.300  c
h
410.675 232.190 m
410.686 232.128 410.694 232.065 410.699 232.003  c
410.704 231.940 410.707 231.878 410.707 231.815  c
410.707 231.451 410.597 231.162 410.378 230.948  c
410.160 230.735 409.863 230.628 409.488 230.628  c
409.009 230.628 408.602 230.761 408.269 231.026  c
407.936 231.292 407.681 231.680 407.503 232.190  c
410.675 232.190 l
h
421.811 229.425 m
421.420 231.425 l
421.087 231.206 420.762 231.039 420.444 230.925  c
420.126 230.810 419.816 230.753 419.514 230.753  c
418.712 230.753 418.058 231.021 417.553 231.558  c
417.048 232.094 416.795 232.779 416.795 233.612  c
416.795 234.144 416.952 234.558 417.264 234.854  c
417.577 235.151 418.019 235.300 418.592 235.300  c
418.978 235.300 419.355 235.243 419.725 235.128  c
420.095 235.013 420.446 234.841 420.780 234.612  c
420.405 236.628 l
419.999 236.763 419.590 236.868 419.178 236.940  c
418.767 237.013 418.353 237.050 417.936 237.050  c
416.738 237.050 415.814 236.779 415.163 236.237  c
414.512 235.696 414.186 234.930 414.186 233.940  c
414.186 233.315 414.306 232.709 414.545 232.120  c
414.785 231.532 415.129 231.003 415.577 230.534  c
416.077 230.013 416.647 229.628 417.288 229.378  c
417.928 229.128 418.670 229.003 419.514 229.003  c
419.900 229.003 420.282 229.039 420.663 229.112  c
421.043 229.185 421.426 229.289 421.811 229.425  c
h
427.000 227.019 m
426.594 229.190 l
429.094 229.190 l
428.750 230.940 l
426.235 230.940 l
425.610 234.175 l
425.589 234.248 425.576 234.310 425.571 234.362  c
425.566 234.414 425.563 234.461 425.563 234.503  c
425.563 234.711 425.633 234.862 425.774 234.956  c
425.915 235.050 426.146 235.097 426.469 235.097  c
427.735 235.097 l
427.391 236.847 l
425.329 236.847 l
424.589 236.847 424.027 236.690 423.641 236.378  c
423.256 236.065 423.063 235.618 423.063 235.034  c
423.063 234.909 423.071 234.774 423.086 234.628  c
423.102 234.482 423.120 234.336 423.141 234.190  c
423.782 230.940 l
422.579 230.940 l
422.907 229.190 l
424.125 229.190 l
424.547 227.019 l
427.000 227.019 l
h
430.583 229.190 m
433.037 229.190 l
431.552 236.847 l
429.099 236.847 l
430.583 229.190 l
h
431.162 226.206 m
433.615 226.206 l
433.224 228.206 l
430.755 228.206 l
431.162 226.206 l
h
438.710 230.753 m
438.075 230.753 437.552 231.039 437.140 231.612  c
436.729 232.185 436.523 232.920 436.523 233.815  c
436.523 234.295 436.635 234.662 436.859 234.917  c
437.083 235.172 437.408 235.300 437.835 235.300  c
438.460 235.300 438.979 235.011 439.390 234.433  c
439.802 233.854 440.007 233.118 440.007 232.222  c
440.007 231.743 439.898 231.378 439.679 231.128  c
439.460 230.878 439.138 230.753 438.710 230.753  c
h
438.914 229.003 m
440.049 229.003 440.942 229.292 441.593 229.870  c
442.244 230.448 442.570 231.237 442.570 232.237  c
442.570 232.821 442.468 233.383 442.265 233.925  c
442.062 234.466 441.763 234.966 441.367 235.425  c
440.908 235.956 440.361 236.360 439.726 236.636  c
439.091 236.912 438.382 237.050 437.601 237.050  c
436.476 237.050 435.588 236.761 434.937 236.183  c
434.286 235.604 433.960 234.815 433.960 233.815  c
433.960 233.243 434.067 232.680 434.281 232.128  c
434.494 231.576 434.794 231.071 435.179 230.612  c
435.638 230.091 436.182 229.693 436.812 229.417  c
437.442 229.141 438.143 229.003 438.914 229.003  c
h
452.110 232.190 m
451.204 236.847 l
448.750 236.847 l
449.516 232.847 l
449.568 232.597 449.610 232.381 449.641 232.198  c
449.672 232.016 449.688 231.873 449.688 231.769  c
449.688 231.477 449.607 231.250 449.446 231.089  c
449.284 230.927 449.058 230.847 448.766 230.847  c
448.256 230.847 447.818 231.045 447.454 231.440  c
447.089 231.836 446.839 232.383 446.704 233.081  c
445.969 236.847 l
443.516 236.847 l
445.000 229.190 l
447.454 229.190 l
447.235 230.315 l
447.683 229.868 448.136 229.537 448.594 229.323  c
449.053 229.110 449.532 229.003 450.032 229.003  c
450.730 229.003 451.271 229.188 451.657 229.558  c
452.042 229.927 452.235 230.446 452.235 231.112  c
452.235 231.258 452.224 231.420 452.204 231.597  c
452.183 231.774 452.152 231.972 452.110 232.190  c
h
f
2 J
10.0000 M
1.00000 0.00000 0.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
328.500 206.000 m
459.500 206.000 l
459.500 258.000 l
328.500 258.000 l
328.500 206.000 l
h
S
2 J
10.0000 M
1.00000 0.00000 0.00000 RG
newpath
347.000 138.000 m
361.000 138.000 l
361.000 212.000 l
347.000 212.000 l
347.000 138.000 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 .0156250 ] concat
[ 1.00000 0.00000 0.00000 1.00000 329.000 70.0000 ] concat
[ .222222 0.00000 0.00000 .222222 0.00000 0.00000 ] concat
q
[ 225.000 0.00000 0.00000 225.000 0.00000 0.00000 ] concat
<<
/ImageType 1
/Width 225  /Height 225
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [225 0 0 225 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/lYE'kl*/<o(5a&5%AAq0('hB#KNPUUkTdIUME4D$$*#aAqifG!&@dL$f82c\$IIALsp:e#F=5(rI
g<TSOb@MK%qIuShYN`Fg4*c@N.*h#Il#bWs\#\%o3h6b9_j?^V+('Skj0qUC/=0"WrcgQb]=<H7&0raJ
Z@%.OLQe!bK>F50l$OqU%eqZZJEu-.\0eA;lV!"(63R^52Oj5]Cb2@l\3B>4HV&ucK&M$hY1Mug^L+%0
ItBcA^::ds"qZ8M?ZA9%2f.WK+:UkuFCl)FaR^B]R;TJamH/=04\-=.<\4OXTP]+(H^"0nY97]GWFAgQ
SQ/(.h/;ubr%.6.(,%<oqu'h^_anj=cfZQFUqM*lV"o&A87s!CQ]I1<[-Z5D=b63d.Q(7'H%sbQJ'[HH
.q4Xd:?!+LNbt?pq$(:o7+.JqgjmCm2Od9"<=AEo>WR(c/Jqh'"p8S)C1K.>nUXZLTYlM%S$YSke*m#k
dLVK#nL3d"UMqAK=R:2mBk7G*oR83qe'Eohi?4]ij<&3I>A6fbTqsptec3R\CbQ]6E'9U_VUI!n`W,Il
?EY`>*_u)!#tD>I#QQ%2oD*")6%,RciKNFb5)IVG>E)44Rl6Ak6m%Xah=I8ViGc2.iC5_@3:U9Z+j2WG
Xk)!^a()80onlr10LFNR0#YfNLVj7]AVk3RqUc/lGF2cI_fE;hUPRgahJhSflQTRUGH#:Zom4<S2=X(i
RYF@5S).6]\/4R87j*3K,R^UpkDqS+<t=9)cIZ6pMpD&h"EE1_lZTlWGKVTU`nca]\*s0eIMRm@c+%WM
;;:k%SVWN?SY0A3h`PT3*U^qO==g6Mq?!J8<Ij-"pia8@#LkB3/9=g=(f3jqo2co,<pXukl"F6'`kSY`
c=]?l>ZoeFFBFY`L9"3><@f/J(9X)7:6RSgX")X!qXZL<qP?t`:RlrM!%/FS@JO'b`6qI#Nc;O8YCG:>
=e?s2gcf[q#4s/gPDNl;SB7rR-bZg)QN0&1jD\d>/+s,\q?oL\YIt@"6g5_fj`!1]QHjS5Pn(Y3p<W9>
i40??Z@lUDjb!#=\4um6&;B6.59Z%&r<EEN3+c)AS'=D`#\P7qS#dHd7WJ@6HA,oPXP`J>8)P6-f:`%E
1D:4`YC;-g9)94E^KJ#<DRnS@2G5IGY/N=;LmHb,_-VN6MCb\.NQ^<O]JG,)4]60sk7Ghm^I*C7U][%i
Rr!rS0=Q3LQq^(-9iL9^C;f7s-smg2Kk4O%pIT<^O#,-Ok6b*7TZ^kN$5aJq4TUA_Z$?R4^/:[32M6T,
8YhPW4#Uq=?b:B2c-`e5=D)OC%K_\3EIuH8M)NSYS5(Hlr8@dm4m:4e=)V=HEHaf$&>O7E`3Jr-Q9<KQ
hj89'$?O.!4CUWA<]^&mKDrORWJG8W[c+_iRhnORmplqi>/k>&gFu[.0HMsBTkQl$W)d^mDMi.Zkk>oY
+R\oKD&?.$$5M+-Gj6-:-r,b*@Pae-*^u'Lnj+X\a50s.UM,#:V/;MWa1[5$!N;q,<)aDYWWNtNKSo%[
70TBZ3`&[>W2L2*<"LOZ!u2Q(MX!Gq"ehYO:f0NWW")d+&1X[^'buCZl9IcATqXSE;*h.Z%THC=.]NRc
'nhJ05XbjMU,l+J6)^^l<)aDYWWNtNKSo%[70TBZ3`&[>W2L2*<"LOZ!u2Q(MX!Gq"ehYO:f0NWW")d+
&1X[^'buCZl9IcATqXSE;%^rX=DluO/)4S=1"n%%3#ns"Q7hZ75dcFW?`dAhn[RKF)fO+t1dMTrT97mO
jV$qjpN$0NfBX/T)P=Z-*.h(=Y2$]n;&"`/iDua<(5i??_Dg=XQo%9Z7\,%GatjacH-"f`3gJ!8nc5dQ
kH6AZfk`"+jlBiREn&g6m<cpU<\%m4C1k<=94p&cic$kJ92m-);/kYRFQ,KJ1!;?:$mlI?ol/GDc]-8H
-=5*coqFQ;S[7rCZ.nZAKlTjiQKZ4Wk::PlGW_:8at`*f94o_objBS;f#f9s$Q=ko7(*l"e+N6nAXTo+
/kOMk3_,$:k4?-j<\E>uq=m4C8o*N$j)n)Bcd.fs,U'R(4B[[48o*N$@n#?h930Y8@GJYlBKeUDUm(6U
@n"GuEKgth49:Jqe/hSRMUi4O<DZOWTqVlDl6fP15t1a*MCPR'T28Ag(%i4iWh?)86:DVge5*$AJr9C2
'ie(-5G=eY.dAB\<'`tOKSh7XW1Qm`"Vp\D.]T/9IR6I<<7F^BW.Kp'#o-IYW[Q;=]j;5)_d]l9OU[)`
_-heCnULII^Ye(\5,Y$1.cOA`ch$gU4W9=Z)$3!S:ZCuo8cAc@Wea6obN31K:6Hmco3"-M^Hk:'d3tGp
=h!-CMZr%N?>\[f726C_HFr!<D-2ATGd:ru'ifpiBMfH\"IXu5-+KBSED]S%d#+-#WA?)O'O4Ra(CM^m
#Zjlf!n(JBGb+&//Z#2!E##L%gI^(^N2W[!:dm%(Mcm>-6L\)o.]NbO;4HQl#Rp4!RX6Na#Z9"@q.u@/
"&N9]`(3<3+Y$[Q.-XO'c7,WbMVo2noA&IWd\Aoh5Du%884=90.GF\3-i<kVq(SeH+ui"-MhP;cN=gGZ
:IQ",.>jY!j)NNA+H)[1f2GO8=Gl*uSPI3V_8a.$]f!R5KSh72;q*A+QADma<4%77l9IcATqXSE;*fe4
o]bV^/AX5@;*i&s'Z1]q$^c)#om.T1#niPuGDUUm1ejGMPDUiA;foY-RO-URc">FPQrI#sS>)@nV;\E$
e*5A0QrI#sS>)\6n!g0,!-CUt@\f`U&/B&fXVY^5mo8om+Y$Y0`F(AR9D1`G\e\G*GGh1-#Z8ur;\^bL
+r)48<<T<MW-cY8E&\PjNf#='<V1Z&f/L(WQ";luUS<Wb'a=L5hCS3s6tE.mB;haQBLVC_F@l_KTF*0K
#[PiilaN:$2<fX?6:DV$.!kpd>,_Chb8>a)ZXYd+<Q(TprE#D!=_8EW=>#r3lmu=+72=2uHFMY*jENdZ
-iZ-(W.Kn-*"E5<jSoE!<D_'M.dATb["=0]$Pfe:U>A4*/#]DU:sfV"l7GuBJr4j^'s4.'hEjX]W2R1%
d0_Ag/QB*/ML%ohMI*JfZWMY^]e'0m<)aHnU.%qH`<,s?L0$Z0'eq.poXqoP)T:(gFF9"#MCN(5oPSt/
k[LfY:AFj_U5I#+2*2aVp1;Q'Tq[Fc'F"+(r1QAfZ^Gou^OV1ki`#KC_G-33X7nmo<)aI%UA&$T-FfsP
Phq-[728ZL$Hf[0Cc:1H+2=(%aBJm!Wea[&$8gbsm2!B0PhKe-6CRFor5?q$rA.DP&\"JA<1$4Ycdh1X
TV@=0-lO()<'`tOKSh7XW1Qm`"Vp\D.]T/9IR6I<<7F^BW.Kp'#o-H:;*UbK$7b<g<)c.PrIg%XW2Q=b
;$@^-'.U#TU4,Et'i`[YW2P<*q?[m::f0HNU'`C8-WF&RUM*?si#u(,_DiY6rI1&DCJl+(_8'1#J6mg&
-aVLM/0B\WT\>OZasCbj9'7UBN1^!J(pdDJUiVb[B";/=CZQ2<LUe'?fP\1H>.N_mrEVHSM.:qfcIW[;
r@g-rc;`e^f@SWAL@Z/GoiaC`M).tsdR(M-HG)L*4\99<EBq"f7;5@%<==k*)b^)S9iGbklCo[6Z\&[B
5J4YATH'e.Wfc[l/"O`!MTFqK^19!e87s_5,Y8V_I@B*mrS;]u#n[<:et.SXkfeuT,O$a,%tO4cO.R.F
MePc#b\"3V-L,``h/6J(i]gS3q7gWnXdi-6%\W_&K-Ln&g_0^JaROLCCXVPAUl0s)I+'65;cFe)CtucQ
ch#'5JGau!SPD\dXBGaI)gT/"/<KnG/ReJdbe3Y#~>
Q
[ 1.00000 0.00000 0.00000 1.00000 -312.000 -20.9844 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -312.000 -21.0000 ] defaultmatrix matrix concatmatrix setmatrix
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
346.654 126.404 m
354.717 126.404 l
354.373 128.107 l
351.467 128.107 l
350.092 135.154 l
347.842 135.154 l
349.217 128.107 l
346.311 128.107 l
346.654 126.404 l
h
354.746 133.592 m
356.730 133.592 l
357.840 127.936 l
355.699 128.357 l
356.012 126.826 l
358.121 126.404 l
360.262 126.404 l
358.871 133.592 l
360.855 133.592 l
360.559 135.154 l
354.434 135.154 l
354.746 133.592 l
h
f
2 J
10.0000 M
1.00000 0.00000 0.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
347.000 138.000 m
361.000 138.000 l
361.000 212.000 l
347.000 212.000 l
347.000 138.000 l
h
S
2 J
10.0000 M
.600000 .600000 .600000 RG
newpath
381.000 121.000 m
395.000 121.000 l
395.000 195.000 l
381.000 195.000 l
381.000 121.000 l
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
380.654 103.420 m
388.717 103.420 l
388.373 105.123 l
385.467 105.123 l
384.092 112.170 l
381.842 112.170 l
383.217 105.123 l
380.311 105.123 l
380.654 103.420 l
h
390.887 110.514 m
394.684 110.514 l
394.371 112.170 l
388.012 112.170 l
388.340 110.498 l
392.059 107.686 l
392.465 107.373 392.775 107.058 392.988 106.740  c
393.202 106.423 393.309 106.113 393.309 105.811  c
393.309 105.488 393.199 105.240 392.980 105.068  c
392.762 104.896 392.454 104.811 392.059 104.811  c
391.694 104.811 391.283 104.883 390.824 105.029  c
390.366 105.175 389.850 105.399 389.277 105.701  c
389.652 103.842 l
390.184 103.644 390.704 103.498 391.215 103.404  c
391.725 103.311 392.230 103.264 392.730 103.264  c
393.616 103.264 394.316 103.456 394.832 103.842  c
395.348 104.227 395.605 104.753 395.605 105.420  c
395.605 105.982 395.449 106.498 395.137 106.967  c
394.824 107.436 394.137 108.071 393.074 108.873  c
390.887 110.514 l
h
f
2 J
10.0000 M
.600000 .600000 .600000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
381.000 121.000 m
395.000 121.000 l
395.000 195.000 l
381.000 195.000 l
381.000 121.000 l
h
S
2 J
10.0000 M
.600000 .600000 .600000 RG
newpath
415.000 108.000 m
429.000 108.000 l
429.000 182.000 l
415.000 182.000 l
415.000 108.000 l
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
414.654 90.4199 m
422.717 90.4199 l
422.373 92.1230 l
419.467 92.1230 l
418.092 99.1699 l
415.842 99.1699 l
417.217 92.1230 l
414.311 92.1230 l
414.654 90.4199 l
h
427.590 94.4512 m
428.027 94.5553 428.368 94.7611 428.613 95.0684  c
428.858 95.3757 428.980 95.7533 428.980 96.2012  c
428.980 97.1699 428.598 97.9355 427.832 98.4980  c
427.066 99.0605 426.012 99.3418 424.668 99.3418  c
424.158 99.3418 423.673 99.3053 423.215 99.2324  c
422.757 99.1595 422.324 99.0501 421.918 98.9043  c
422.246 97.1699 l
422.600 97.3678 422.983 97.5241 423.395 97.6387  c
423.806 97.7533 424.215 97.8105 424.621 97.8105  c
425.277 97.8105 425.798 97.6855 426.184 97.4355  c
426.569 97.1855 426.762 96.8522 426.762 96.4355  c
426.762 96.0814 426.616 95.8184 426.324 95.6465  c
426.033 95.4746 425.590 95.3887 424.996 95.3887  c
424.105 95.3887 l
424.387 93.9355 l
425.340 93.9355 l
425.954 93.9355 426.441 93.8236 426.801 93.5996  c
427.160 93.3757 427.340 93.0762 427.340 92.7012  c
427.340 92.3991 427.215 92.1699 426.965 92.0137  c
426.715 91.8574 426.355 91.7793 425.887 91.7793  c
425.553 91.7793 425.191 91.8236 424.801 91.9121  c
424.410 92.0007 424.001 92.1283 423.574 92.2949  c
423.902 90.6387 l
424.361 90.5137 424.814 90.4199 425.262 90.3574  c
425.710 90.2949 426.152 90.2637 426.590 90.2637  c
427.579 90.2637 428.322 90.4277 428.816 90.7559  c
429.311 91.0840 429.559 91.5710 429.559 92.2168  c
429.559 92.8001 429.387 93.2871 429.043 93.6777  c
428.699 94.0684 428.215 94.3262 427.590 94.4512  c
h
f
2 J
10.0000 M
.600000 .600000 .600000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
415.000 108.000 m
429.000 108.000 l
429.000 182.000 l
415.000 182.000 l
415.000 108.000 l
h
S
2 J
10.0000 M
[ 1.00000 0.00000 0.00000 1.00000 0.00000 .333333 ] concat
[ 1.00000 0.00000 0.00000 1.00000 373.000 38.0000 ] concat
[ .222222 0.00000 0.00000 .222222 0.00000 0.00000 ] concat
q
[ 225.000 0.00000 0.00000 225.000 0.00000 0.00000 ] concat
<<
/ImageType 1
/Width 225  /Height 225
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [225 0 0 225 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/l/X,`r&BFSP<:L,Wi,At%E#:D9[1]eYK7a\b>dY2qa/iR%6R!+u<NB.tKcjBBI@IfQMM.(5pLGV7
s%cnU4jT6a6IXE>dkAJNJA^bt4.jjrrI261]tM,(kOZMtctkTZNCKu!RS5'oopYm2p+epn31WeiN?ibt
l*T8a2f_7e9_*"Hq7o?MQcnRT-ctFo4O,UAO+9\'.U9/YOsLaaDRV,4b<&7cg3u4^<PH5_\(`JPOQp;#
#7804B*D:e,]g<F%#74!Or9#`>2.@4>_ei9O,jed$^8WWc]@I;!$(*F4O3,2>ETjYS'>ca$/cf!2Z*He
D;"iZYHKV6Y66fcD5lSdgQokoi&:ZLcK0(\>7r%+lh,)/+^bc"Keid#:,V*Y]rkBdgS1%$oD*5"Kn3.T
Cc8_UXr-69Ojit$r=*o74eJ@=[`(srd:i1KqYL3j:==JO*YCU/!;[=$346-:F?4hsH_[2Vi`)1q[#Jqm
&OB;bZ<-\nQ.5/<[t>^e32b6I6mbg"1n2bREPefl`F;^:,4kW#5"Hd)pg&CqDMI//Z<FA.T8lTA7SmPV
*g:>mm:mY^I[rO<PX$0Rp;?IL$-4kL<sp/Q/!-&N+Y$M86-B#Q,]*,2K>F5E/P*NGaGkWn+:e2Q-:Gfg
%,[S^0&n8MH9IF1-rm%hk2'j\9ZW&B2Ob0QD3209?EY5*V,+p*21[\@q$;#qjfaBF,0snth4K/encaOT
T"8m/j`7?qI]h9Q"P"^Fku:qTlp?`@M&/U4ap=q(rq&2PW]]LYGnX<f=fk`%Kn9.ThE`j[i?/DbY0AcD
UfWlo3Q'hFjlL&3S'`!Cb(iBFN"F^Nks*;5VEZH!:VLoJ,OKZDrg#AgBt;[KhL<6&4eNr-miU`a=[SkW
KT2@B],c=OUmH>SAR-bT11gcD!RCYM3?F7H,52f"NLS24^U,qC%Ke2\*`8e^P#uV2gH$Ugn^M9Re\\T@
*Tb?iI:%cI_=k4$%6ZK8Fm6od.ZJ0<,g!-u::OO]]Y5oWn\I7Dk9#hENFn#efGTX2j4^M#etB0JL<t/'
RI?mSq_X^imkmd,;3-3iOcPND:Ed-]cH1@#i9CtA&/8ltSP?TJ-2h6KR48='6[#fYqF(+d\gET1fB9!p
_TooE<6sP;>.kTSXUAS3'I)#Up=]t]h/;>k\R)JA+#<Zn45I1!n!BGh:`Am9-s6gHFOZ!bN+t8?SjcC,
Q]"[(@<NPU;Y9@?`Ya\)m.Wcb&!Cjj+t7L#iri!F4,$m<%[)jR<=bM':!d4MkL2WS5-rq$/Z%"JV;uso
*k;dN2[>IuX=Gcs]FZemMek[/7FKMaEk<BfPbuuG<UMS)6^U&7+ij;"]+o`Tg1>*()Z5L=K&(=RX-+5u
oUqEIJ(mU#s!&C$0H,pe0E4%$ItjoeEY+([:HjU%jZfG8Y$IUi\fHPXU;Zs+]C"]EUen3"N\t*3Qr`0X
4_(1lGfZf[#hudLQthfa*"DIA'dPB>>T7h^rV`:.jZ%Oh&Agb)Q'SFRjR`Jp=LGh?:^l<=.n>U-Eu)`Y
D.@phJ:hgfPm^(GbKJ)XFh/YI"-4">pX\C#Vpicd704XL\Lht,i-A;#QN^O"6=/JXX!(mmO0>;"K]!>K
R'bc>>?U[KN"L_.]n)`L*`7AKkGe#B$Bo,DRj"#d;jn^]F7!oIW#uf%fka^OC7EI[`aY#rmj3!C>$?YP
G3K6,OZZ)]U@!-9S98G^Rf%%u"b]C?NDf=(ZKn_E<+Z:NaCD$!l1T*7"pqa53Zr-E&n3n1@k\aqhKLq!
)SIeC"I3[)k'#L<jjdf)('n@C,`aW\=o$-B`^m(45q\3p6lX./2]`\A+BP@>0H,6_0qh,['nF(mWZ`k0
$e.%<Wd8SAS%<eEQ%78m.uAR%l#\s\h?E.;[7)^BK]se*3Z[$\J-mID`Xbot_+Un=JI8M8.XSj<h,#l^
<*DloE"`u$^7eVs0pt`'Y)L((5V`ou6D]$VC0cAfZCpL(';)XB.;=U4FT_E`=/DJn\^Qe%La)'nKW'^*
4O'7pL%ki!>m*Q/c#=K-f"&,Eh<]+gX<9(!Nt<A-a"N,[:Cp#B3nfZ)Nk+J(kAiA":d4]eb<CXIi8"9)
>\M._S3fk:fobuQYnGdGJL'e3r/d83(Z#5QmQ=B75n\IZ>m.>j1gW&#2Bs?$]Ltg!03H_=[DIu7QNsL;
IXZ$g..>Y@qDdW^JQ0":5o\TWpZUYE'(r.)*ZuF:IRhe;VYJsV4Ws4o71nAEpP!K*`U2($(1a'dU.*>S
-k4Lb0i,SZK]AK[9I>rcG79(R/C0B<O!lEfg[/s_"<N[Vb)h^50@H.(m6gdL5,.co8Y5HAq0CI3lu4rF
=4\j*!c`8+J^$c$Aas'SEZWSh)+:Fqc\Y3$HV/-2P)!AIGIu\4]G'3;MoA"[7.9\<KIRn2Do")B(X=-e
'PXo,a=iA3U-Me<2Z@d_(!j"$2Hk0$qE)Y&SU*`HcP^U(^7sr@2u^,RY1K`B2::a(cKN8:)h1^Z`>lW(
Phjk-h:&2sS9/&@#57n>UNf6M6<:$W:U<-!^F*CuF]fWDa4[5LH'fYC#Fn4gQD/CF?-nM2SuB9XNPD>L
d%Wc;F]n!O3a*!;in/]U^`)LD1n@Cl:TVq>^<W[t7G$k5<X\*s8S9hUFVMGNKH(I,Pt@`jfF<+V#O'_f
2u\b*P#C+O6:>ULi\>j`"KF6P4q=^Ap.GHF;/A'-jiM:D0Ed+'5c(H)]H"Z;lcCdsYuiP.^)Z&:llr3d
];d155QS5?#[q@/--+Z#`%$WmCf(b[Lq9MXB@'?jKnt=?qu+7bDWd-%d^kM1iH:];"J%dj;M,k<.4O#L
<H!a=MB:%cK4sQuTfjA*q)d"4rNA0t)$VjPd[#c>:hr*5n*ZhqghsSt6MgY0dEh)!K:7$GhuV5I3JPEa
M73g/Glps$C,pRUF2^2Pj70)IFMJ!Q6DS/8]0%JgNi'7=">qPjk*S(D.I(Lu#MgFdP.2!4:JB+J;&n&;
,k3Jum.PO)af+a<O9#2*:,%TdrJD^:;FNtmZ"-f6IM8:_q`9V2qWNtFil#CqGXS]W&rI!)+QDfs.%(QK
#d&\T?Jl39adnJ;*/&FE>Z=**dhtDA;PN7.k-b,5GYI$SD:/[DSWATPqLt"7U@O89dbID_\(`c[=WT7e
5r+BJoT^V"$LSJ@#KcgdX\b'Z2&!u]f9t,6A4;VW)?#)MV`L#8n'ip-;TZgH2/$huPooZ2S1:*!jUh\n
7>A]g;Af-)^$]0*g6lERY9AtdQKk17+:.$PMS6`YUp_A5:8]H,V,Ams))nt_dH6qPX@\G0+uQ_ci#io6
`9&8*E^e^HF:>8\\-DcqWA7k'8;Bfo4j')V_!,re,QP[a]Vd$=<JpADqJ(,+^]cL5.$kKlPg<dV@Ar'o
(kh!=Fl[C[Ondulfh!4L&c5',"p:Q`ihX[t1:Hs5RsAT__`8#N4TWlbRYdk=EbcTh9NtJSGfJ2NNKS]$
GlS2/e0gh_r3S5K6f,'NkFpc%e3/p1Hh*!HQ1NA&?3,4pC@t:J'3f79%s18[kGj`D-&C@i?t%LsMn^nf
-Vl6r(OCK8-\n!'c3:f?SE9-)(Bo('4kia4$:A0HStg6@<+q)l":or[[0V@,k?N80'&/'q`LM5iOA0K/
>S9C-+;,qSW)fs1Hhed#q7gJG],qE?;YAaYTMGKS>`6S<p0uJ_AsgBGGF=uuH\fkeCr/^l:.61VjK7>.
kPl1NYG9<:b0%_;q%[<,oCGnZe=nFP&1-joUuf2j_fE)K0u?12mM9k5>_(5!]5m0_UJ0Sp%YcNL"f#p$
RAD!/ORFEn(kq9dKcgYGG$9U.pc+Fi]rDq+5&icYH+c6h>t-!";W/$J:^D4pO2543HgO]V;MqW<,sXAR
Ugq%Zm5p2[fA^2@]hsGoBKh,WY1IHedt*ap"6g9R4C\='.;u[7]:"M^R0aTshB1UFN+I.a^K`VH;rM[T
jNL3@`p]iK]:TDB-OF-e?c$!QLl+Yf$c1\5`oD%M"LaY(0ttE;aduQGcA#[Y;Drg#>Z5@E>(-T88jHH;
M9TXBqjC'1,`V1VU#IL?g5BUMRA+XYI!"=g_G2h.5C:rgqu'jRc7"sHL]5s)T54G_ifH*p17p]E33'`C
a)J]KI^e(6F*f<]G1oXteJ8l'Xc;>E4oMsO)*OV<jLH+mbRhj.&lK+MUj^sUr9jSYhBc;mnh/VkENir*
40[87:W:Uir#Cd<h/5_0\'!4n6GWSJ$7QEjfS&+``T&s^2JiRc(I4Ue]pjIX,`q*[BH72[JKL=&;Brh1
jYB2$LVmQ.>,@O#p%s.mk@hm]WM<hUlg$)"PQ%-PK\XJpM:gCY>bRYqn<un0Cn#<^8]II"OO-;YG(-4p
DkJnc//(m[lh)`!<d,4L/9tH]cd!2'EeG/22.rE<$INZJ;&cZo>sXa:U2URq%fD@==bLTj7PojI(.lN@
Rm%<$3(G8[4qT#31E)5iVO+*^RY/+(0qgeXrlaX"o(MdCF8,FN"<EQDIM[4<bjfp_/shO#m.9g)gE\<@
nBiX1O#@3'TO!L"<3t8:A2UdFYR,"mR9m(@5+g$u/jM>U*78Y1W7u:Ocd1Eb[o"Q.?-2(9Q#=<8'1b'F
C8GjKBJL<J8\.>U,t$":Y\3&?Z]hc^DRUk\PP"3a+*pE20,s-EoCG>]q8^M\GnZu0?X@&rg'4]GVE!B)
RLfUQH9nB)aH4Ee?8nksZmX+ZJ:'MB\*>_CYLfgNWt:BRHp6;N_2"-76lm?k,QfA%0qD(EXb-mc#,!-j
lZJa;#_5ll\!q6Nr&4nrg[3?/&3N9=MH9kY9uN/Z*_NRX?EI842F126+..5`?.,-S:^JD7.0#g`k8tcf
E.WTUm"oWmUb.qV-/#a]14^TtIX^j#ppXEYd_00qDRWj(`)F">!AHeN"T/.hXN0"12AcjK]cJ&lZtmFk
^QXBtBBOY+UC(,?5<TKOjT~>
Q
[ 1.00000 0.00000 0.00000 1.00000 -312.000 -20.6667 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -312.000 -21.0000 ] defaultmatrix matrix concatmatrix setmatrix
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore

%%Trailer
%%EOF
